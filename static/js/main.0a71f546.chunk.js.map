{"version":3,"sources":["components/ImageCard/index.js","components/Nav/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["ImageCard","props","className","onClick","handleClick","alt","id","src","image","Nav","Wrapper","children","Title","App","useState","images","clickedImages","score","name","setName","event","allImages","target","indexOf","sort","a","b","Math","random","concat","alert","fish","message","map","key","ReactDOM","render","document","getElementById"],"mappings":"u3DAeeA,MAZf,SAAmBC,GACf,OACI,yBAAKC,UAAU,OAAOC,QAAWF,EAAMG,aACnC,yBAAKF,UAAU,iBACX,yBAAKG,IAAKJ,EAAMK,GACZC,IAAKN,EAAMO,W,MCIhBC,MAVf,WACI,OACI,yBAAKP,UAAW,uCACZ,0BAAMA,UAAW,WAAU,wBAAII,GAAG,YAAP,kB,MCKxBI,MARf,SAAmBT,GACf,OACI,yBAAKC,UAAU,WAAWD,EAAMU,W,MCQzBC,MAVf,SAAeX,GACX,OACI,6BACA,wBAAIC,UAAW,SAASD,EAAMU,Y,OCwFvBE,MApFf,WAAgB,IAAD,EACWC,mBAAS,CAC/BC,SACAC,cAAe,GACfC,MAAO,IAJI,mBACNC,EADM,KACAC,EADA,KAUb,SAASf,EAAYgB,GAGnB,IAAMC,EAAYD,EAAME,OAAOjB,IACFa,EAAKF,cAAcO,QAAQF,IAAc,EAIpEF,EAAQ,CACNJ,OAAQG,EAAKH,OAAOS,MAAK,SAAUC,EAAGC,GACpC,MAAO,GAAMC,KAAKC,YAEpBZ,cAAe,GACfC,MAAO,IAITE,EAAQ,CACNJ,OAAQG,EAAKH,OAAOS,MAAK,SAAUC,EAAGC,GACpC,MAAO,GAAMC,KAAKC,YAGpBZ,cAAeE,EAAKF,cAAca,OAAOR,GACzCJ,MAAOC,EAAKD,MAAQ,IAIpB,WACqB,KAAfC,EAAKD,QACPa,MAAM,aACNX,EAAQ,CACNY,KAAMb,EAAKH,OAAOS,MAAK,SAAUC,EAAGC,GAClC,MAAO,GAAMC,KAAKC,YAEpBZ,cAAe,GACfC,MAAO,QAUnB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKf,UAAU,eACb,wBAAII,GAAG,iBAAiBY,EAAKc,QAA7B,MAEF,yBAAK9B,UAAU,0BACb,sCAAYgB,EAAKD,MAAjB,KACA,qKAKHC,EAAKH,OAAOkB,KAAI,SAAAzB,GAAK,OACpB,kBAAC,EAAD,CACEF,GAAIE,EAAMF,GACV4B,IAAK1B,EAAMF,GACXE,MAAOA,EAAMA,MACbJ,YAAaA,UC/EzB+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a71f546.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n    return (\r\n        <div className=\"card\" onClick = {props.handleClick}>\r\n            <div className=\"img-container\">\r\n                <img alt={props.id}\r\n                    src={props.image} />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Nav(){\r\n    return(\r\n        <nav className =\"navbar navbar-expand-lg navbar-dark\">\r\n            <span className =\"mb-0 h1\"><h1 id=\"nav-text\"> ClickyGame</h1></span>\r\n\r\n        </nav>\r\n\r\n\r\n    );\r\n}\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction  Wrapper (props){\r\n    return(\r\n        <div className=\"wrapper\">{props.children}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Title(props){\r\n    return(\r\n        <div>\r\n        <h4 className =\"title\">{props.children}</h4>\r\n        \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Title;\r\n","import React, { useState } from 'react';\nimport ImageCard from \"./components/ImageCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport images from \"./images.json\";\n//import { render } from '@testing-library/react';\n\n\nfunction App() {\n  const [name, setName] = useState({\n    images,\n    clickedImages: [],\n    score: 0,\n    // topScore: 0,\n    // message: \"Click on a  character..\"\n  });\n\n\n  function handleClick(event) {\n    //console.log(\"working\");\n    //alert(\"working\");\n    const allImages = event.target.alt;\n    const imagesAlreadyClicked = name.clickedImages.indexOf(allImages) > -1;\n    //console.log( name.clickedImages);\n    //console.log(name.id);\n    if (imagesAlreadyClicked) {\n      setName({\n        images: name.images.sort(function (a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedImages: [],\n        score: 0\n      });\n\n    } else {\n      setName({\n        images: name.images.sort(function (a, b) {\n          return 0.5 - Math.random();\n\n        }),\n        clickedImages: name.clickedImages.concat(allImages),\n        score: name.score + 1\n      },\n\n\n        () => {\n          if (name.score === 12) {\n            alert(\" You win!\");\n            setName({\n              fish: name.images.sort(function (a, b) {\n                return 0.5 - Math.random()\n              }),\n              clickedImages: [],\n              score: 0\n            });\n          }\n        }\n\n      );\n    }\n\n  }\n\n  return (\n    <div>\n      <Nav></Nav>\n      <Wrapper>\n        <Title>\n          <div className=\"text-center\">\n            <h1 id=\"message-title\">{name.message} </h1>\n          </div>\n          <div className=\"gameScores text-center\">\n            <p>Score : {name.score} </p>\n            <p >The goal is to reach 12 points. Once you get to 12 points you win! Oh yeah dont click the same picture twice or you lose! Have fun!!</p>\n          </div>\n\n        </Title>\n        {}\n        {name.images.map(image => (\n          <ImageCard\n            id={image.id}\n            key={image.id}\n            image={image.image}\n            handleClick={handleClick} />\n        ))}\n      </Wrapper>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}